#!/bin/sh
VERSION_FILE=$1
FORMAT=$2
if [ $# = 0 ] || [ -z ${VERSION_FILE} ] || [ ! -f ${VERSION_FILE} ]; then
    echo 'Usage: u8_gitversion *releasefile*" [*format*]';
    echo "  Generates a version ID based on *releasefile* with additional information from git,";
    echo "    possibly including include the current branch, the last commit ID, ";
    echo "    or the # of commits since *releasefile* was committed";
    echo "  *format* can be 'full' for all information, 'nobranch' for just the # of commits,";
    echo "    or 'branch' for both the branch and # of commits"
    exit 2;
fi;
BASE_VERSION=$(cat ${VERSION_FILE})
if [ ! -d .git ] || ! which git > /dev/null; then
    echo "${BASE_VERSION}";
    echo "Warning: No git executable" >2
    exit;
fi;
CUR_COMMIT=$(git log -n 1 --no-decorate | head -1 | cut -d' ' -f2)
BASE_COMMIT=$(git log -n 1 --no-decorate ${VERSION_FILE} | head -1 | cut -d' ' -f2)
N_COMMITS=$(git rev-list --count ${BASE_COMMIT}..HEAD)
BRANCH_REF=$(git symbolic-ref -q HEAD)
BRANCH_NAME=${BRANCH_REF##refs/heads/}
if [ -z "${N_COMMITS}" ]; then
    PATCHLEVEL=0;
else
    PATCHLEVEL=$((${N_COMMITS}+1));
fi;
VERSION=${BASE_VERSION}.${PATCHLEVEL}

if [ -z "${FORMAT}" ]; then
    echo ${VERSION}
elif [ ${FORMAT} = "-branch" ]; then
    echo ${VERSION}-${BRANCH_NAME}
elif [ ${FORMAT} = "-nobranch" ]; then
    echo ${VERSION}
elif [ ${FORMAT} = "-full" ]; then
    if [ ! -z "${CUR_COMMIT}" ]; then CUR_COMMIT="-${CUR_COMMIT}"; fi;
    if [ ! -z "${BASE_COMMIT}" ]; then BASE_COMMIT="-${BASE_COMMIT}"; fi;
    echo ${BASE_VERSION}${BRANCH_TEXT}-${N_COMMITS}${CUR_COMMIT}${BASE_COMMIT};
elif [ ${FORMAT} = "-commit" ]; then
    echo ${VERSION}-${BRANCH_NAME}-${CUR_COMMIT};
elif [ "${FORMAT}" = "${BRANCH_NAME}" ]; then
    echo ${VERSION};
else
    echo ${VERSION}-${BRANCH_NAME};
fi;
